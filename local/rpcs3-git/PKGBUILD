# Maintainer: Zion Nimchuk <zionnimchuk@gmail.com>
# Submitter: Maxime Gauduin <alucryd@archlinux.org>

pkgname=rpcs3-git
pkgver=0.0.36.r56.gfcb6bc70f8
pkgrel=1
pkgdesc='A Sony PlayStation 3 emulator'
arch=(x86_64)
url=https://github.com/RPCS3/rpcs3
license=(GPL-2.0-only)
depends=(
  alsa-lib
  glew
  glu
  # Use bundled FFMPEG for now since we use FFMPEG 6.0
  #libavcodec.so
  #libavutil.so
  #libswscale.so
  libevdev
  libgl
  libice
  libpng
  libsm
  libx11
  libxext
  openal
  qt6-base
  qt6-declarative
  qt6-multimedia
  qt6-svg
  sdl3
  vulkan-icd-loader
  zlib
# newer system flatbuffers is incompatible with the version RPCS3 depends on
# flatbuffers
  llvm
)
makedepends=(
  cmake
  ninja
  git
  libglvnd
  libpulse
  jack
  libpipewire
  python
  vulkan-validation-layers
  # clang+lld is required because audio is broken with latest gcc
  clang
  lld
)
optdepends=(
  libpulse
  jack
  libpipewire
)
provides=(rpcs3)
conflicts=(rpcs3)
options=(!emptydirs !lto)
source=(
  git+https://github.com/RPCS3/rpcs3.git
)
sha256sums=(
  SKIP
)

pkgver() {
  cd rpcs3
  git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//'
}

prepare() {
  cd rpcs3
  git remote set-url origin https://github.com/RPCS3/rpcs3.git
  git submodule update --init --filter=tree:0 --recursive
}

build() {
  # GLIBCXX_ASSERTIONS is know to cause unwanted assertions and crash rpcs3
  BAD_FLAG="-Wp,-D_GLIBCXX_ASSERTIONS"
  CXXFLAGS="${CXXFLAGS//$BAD_FLAG/}"

  export CC=clang
  export CXX=clang++

  cmake -S rpcs3 -B build \
    -G Ninja \
    -Wno-dev \
    -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_SKIP_RPATH=ON \
    -DCMAKE_LINKER=lld \
    -DCMAKE_SHARED_LINKER_FLAGS="-fuse-ld=lld" \
    -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld" \
    -DUSE_NATIVE_INSTRUCTIONS=OFF \
    -DUSE_PRECOMPILED_HEADERS=OFF\
    -DUSE_SYSTEM_FFMPEG=OFF \
    -DUSE_SYSTEM_XXHASH=OFF \
    -DUSE_SYSTEM_FAUDIO=OFF \
    -DUSE_SYSTEM_LIBUSB=OFF \
    -DUSE_SYSTEM_LIBPNG=ON \
    -DUSE_SYSTEM_ZLIB=ON \
    -DUSE_SYSTEM_CURL=OFF \
    -DUSE_SYSTEM_FLATBUFFERS=OFF \
    -DUSE_SYSTEM_PUGIXML=OFF \
    -DUSE_SYSTEM_OPENCV=OFF \
    -DUSE_SDL=ON \
    -DUSE_SYSTEM_SDL=ON \
    -DBUILD_LLVM=OFF \
    -DUSE_SYSTEM_WOLFSSL=OFF

  ninja -C build
}

package() {
  DESTDIR="${pkgdir}" cmake --install build
}

# vim: ts=2 sw=2 et:

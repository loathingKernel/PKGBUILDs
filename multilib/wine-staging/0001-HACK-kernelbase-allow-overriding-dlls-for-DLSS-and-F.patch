From 231cf4d88e368e5f3f42377c865916190534dcf1 Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Tue, 8 Jul 2025 15:27:08 +0300
Subject: [PATCH] HACK: kernelbase: allow overriding dlls for DLSS and FSR4

`WINE_LOADDLL_REPLACE=fsr4` will force Wine to load c:\windows\system32\amdxcffx64.dll
`WINE_LOADDLL_REPLACE=dlss` will force Wine to load c:\windows\system32\nvngx_dlss{,d,g}.dll
---
 dlls/kernelbase/loader.c | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/dlls/kernelbase/loader.c b/dlls/kernelbase/loader.c
index 7afbe0460eb..6753f706a65 100644
--- a/dlls/kernelbase/loader.c
+++ b/dlls/kernelbase/loader.c
@@ -546,17 +546,35 @@ HMODULE WINAPI DECLSPEC_HOTPATCH LoadLibraryExW( LPCWSTR name, HANDLE file, DWOR
 {
     UNICODE_STRING str;
     HMODULE module;
+    WCHAR overrideW[MAX_PATH] = {0}, envW[40] = {0};
 
     if (!name)
     {
         SetLastError( ERROR_INVALID_PARAMETER );
         return 0;
     }
-    RtlInitUnicodeString( &str, name );
+    if ( GetEnvironmentVariableW( L"WINE_LOADDLL_REPLACE", envW, sizeof(envW)) )
+    {
+        if ( !wcscmp( envW, L"fsr4" ) )
+        {
+            /* HACK: override amdxcffx64 dll path to a non-standard location for FSR4 upgrade */
+            if (wcsstr( name, L"amdxcffx64.dll" )) wcscpy( overrideW, L"c:\\windows\\system32\\amdxcffx64.dll" );
+        }
+        if ( !wcscmp( envW, L"dlss" ) )
+        {
+            /* HACK: override nvngx_dlss* dll paths to a non-standard location for DLSS upgrade */
+            if (wcsstr( name, L"nvngx_dlss.dll" )) wcscpy( overrideW, L"c:\\windows\\system32\\nvngx_dlss.dll" );
+            if (wcsstr( name, L"nvngx_dlssd.dll" )) wcscpy( overrideW, L"c:\\windows\\system32\\nvngx_dlssd.dll" );
+            if (wcsstr( name, L"nvngx_dlssg.dll" )) wcscpy( overrideW, L"c:\\windows\\system32\\nvngx_dlssg.dll" );
+        }
+        if ( overrideW[0] ) TRACE( "HACK: replaced %s with %s\n", debugstr_w(name), debugstr_w(overrideW));
+    }
+
+    RtlInitUnicodeString( &str, overrideW[0] ? overrideW : name );
     if (str.Buffer[str.Length/sizeof(WCHAR) - 1] != ' ') return load_library( &str, flags );
 
     /* library name has trailing spaces */
-    RtlCreateUnicodeString( &str, name );
+    RtlCreateUnicodeString( &str, overrideW[0] ? overrideW : name );
     while (str.Length > sizeof(WCHAR) && str.Buffer[str.Length/sizeof(WCHAR) - 1] == ' ')
         str.Length -= sizeof(WCHAR);
 
-- 
2.50.0


# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Peter Jung <ptr1337@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging
pkgver=10.10
pkgrel=5
_tkg_commit=ec08911b27dfdf141d75563d5ce61069dac581a9

_pkgbasever=${pkgver/rc/-rc}
_winever=$_pkgbasever
#_winever=${_pkgbasever%.*}

source=("git+https://gitlab.winehq.org/wine/wine.git?signed#tag=wine-$_pkgbasever"
        "git+https://gitlab.winehq.org/wine/wine-staging.git#tag=v$_pkgbasever"
        30-win32-aliases.conf
        wine-binfmt.conf)
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-wmclass.patch
        wine-isolate_home.patch
        0002-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
        7064.patch
        8323.patch
        0001-clang-fixup-lto.patch
        0002-makedep-add-per-source-cflags-and-per-program-ldflag.patch
        0003-configure-Enforce-4-byte-stack-alignment-on-clang-fo.patch
        wine-ntsync.patch
)
sha512sums=('baee24792d16348fac429764643d6819e0ed2eb333999c1e3d7bbe4850fd617910f3b525e55d0ba13b62c8612ffd30dbc0ac69f78e8907b64dc42a1add96ba9b'
            'ce44aba2bef135bb2b30f02c95a7551f1aa551934cef15fdad2781029d8ce3644b950d314f5e9263a2f3d497be0ca6edfcf090b52a547978a10ec5e22f5bbd70'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            '43491057649e797f0152ef07a96b4547e506699d6a69facfbcd60a90da2014cc3b7847f0f093ecead218287a14d08fdab4f6ee1a184d80dda1836e006bf3e1b5'
            '372be267e8099fbffbaee99e127032841e5ff42949e96822fb9299fadf8c41f9932bc42c19d25dec5b0b06f56f9db91e480391d3e2fc988bf8885a79e0c58144'
            '3dcdbd523fcbe79b9e9e9b026b9d0a5edf296514c7b48bd465d2dc05a8ca08e23ba8817e2de08edfe52286a2a2f81db42b65f71254cabe496752b9d45131d282'
            'f43f4fe92c9f9b826e9c71d69360aa470333242df8c4e60be1fd4a23a311c971f6eee253bc2fb94adc00eddc99a09917de99286c8ab97bd9da1e551f6ff0f7b8'
            '21ba0ec8e0a479cd520096417b7f152112e3fa8e8cc8ecf3b43cb748025723047fc8629821f1b94e3092e763b4a65c033423eb4efb05322e358121cf85803bda'
            'dbba8f7e47147c14cc38afd287252ced0b25458349a8d361bb1b1a173d0024dff641416f2be859ca92eb4cc5c3274f08aa93d1ee80c10af451ceb339857c9934'
            '8694685c4b4e8559b98286a11e39b662edc6c0ff1fa0446abd828af84f31d26fc6b8d18c00e3e3d273dcdad373dd6af8f01eeaa0d3de14ef28512494c756bdc4'
            '605f6f527fc0b25768a3fa7bd921506269c2e70edb17289042eac4f34a410da26bfc4e61d0ae6356258d5fc10be25b8baab9dcabbd7bed034e94560882be457f'
            '67d2e1e08d7f3bab2cd8d39d9bafd2451ab813fd4696ace70e3a310dd4d249112f3a88dedb7a2bcc0f4b85131a41cd1f20a6f21384ef92ec02ec66f07fd46a93'
            'c73395b6b21e65c2a03aa25700a85c6daed7ec411e4694371d2941cc9e39ca7e0d5ab0626d4fb15cb0f0a67270b5e33fffde7ddcb51a2f1cca23471879d52ac5')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs - Staging branch"
url="https://www.wine-staging.com"
arch=(x86_64)
options=(!staticlibs !lto)
license=(LGPL-2.1-or-later)
depends=(
  attr
  desktop-file-utils
  fontconfig
  freetype2
  gettext
  libpcap
  libunwind
  libxcursor
  libxkbcommon
  libxi
  libxrandr
  llvm-libs
  wayland
)
makedepends=(
  alsa-lib
  clang
  ffmpeg
  giflib
  git
  gnutls
  gst-plugins-base-libs
  gst-plugins-good
  gtk3
  libcups
  libgphoto2
  libpulse
  libva
  libxcomposite
  libxinerama
  libxxf86vm
  lld
  llvm
  mesa
  mesa-libgl
  opencl-headers
  opencl-icd-loader
  pcsclite
  perl
  python
  samba
  sane
  sdl2
  unixodbc
  v4l-utils
  vulkan-headers
  vulkan-icd-loader
)
optdepends=(
  alsa-lib
  alsa-plugins
  cups
  dosbox
  ffmpeg
  giflib
  gnutls
  gst-plugins-bad
  gst-plugins-base
  gst-plugins-base-libs
  gst-plugins-good
  gst-plugins-ugly
  gtk3
  libgphoto2
  libpulse
  libva
  libxcomposite
  libxinerama
  opencl-icd-loader
  pcsclite
  samba
  sane
  sdl2
  unixodbc
  v4l-utils
  vulkan-icd-loader
  wine-gecko
  wine-mono
)
optdepends+=(
  NTSYNC-MODULE
)
provides=("wine=$pkgver")
conflicts=('wine')
install=wine.install

prepare() {
  # Get rid of old build dirs
  rm -rf $pkgname-64-build
  mkdir $pkgname-64-build

  cd wine
  # apply wine-staging patchset
  ../wine-staging/staging/patchinstall.py --backend=git-apply --all \
    --no-autoconf \
    -W eventfd_synchronization \
    -W server-PeekMessage \
    -W server-Signal_Thread

  patch -Np1 -i "$srcdir"/wine-ntsync.patch
  patch -Np1 -i "$srcdir"/7064.patch
  patch -Np1 -i "$srcdir"/8323.patch

  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  patch -Np1 -i "$_tkg_path"/proton/LAA/LAA-unix-staging-wow64.patch
  patch -Np1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -Np1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch

  patch -Np1 -i "$srcdir"/wine-wmclass.patch
  patch -Np1 -i "$srcdir"/wine-isolate_home.patch
  patch -Np1 -i "$srcdir"/0002-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
  patch -Np1 -i "$srcdir"/0001-clang-fixup-lto.patch
  patch -Np1 -i "$srcdir"/0002-makedep-add-per-source-cflags-and-per-program-ldflag.patch
  patch -Np1 -i "$srcdir"/0003-configure-Enforce-4-byte-stack-alignment-on-clang-fo.patch
  ./tools/make_requests
  ./tools/make_specfiles
  ./dlls/winevulkan/make_vulkan
  autoreconf -fiv
  rm -rf autom4te.cache
}

build() {
  # Doesn't compile without remove these flags as of 4.10
  # incompatible-pointer-types: https://bugs.gentoo.org/919758
  export CFLAGS="$CFLAGS -ffat-lto-objects -Wno-error=incompatible-pointer-types"

  # Apply flags for cross-compilation
  export CROSSCFLAGS="-O2 -pipe -g"
  export CROSSCXXFLAGS="-O2 -pipe -g"
  export CROSSLDFLAGS="-Wl,-O1"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="${flags["-mtune"]:-core-avx2}"

  export CC="clang"
  export CXX="clang++"

  # From Proton
  OPTIMIZE_FLAGS="-O3 -march=$march -mtune=$mtune -mfpmath=sse -pipe"
  OPTIMIZE_FLAGS+=" -mprefer-avx128"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
  DEBUG_FLAGS="-ffunction-sections -fdata-sections -fno-omit-frame-pointer"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  #STRIP_FLAGS="-s"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $DEBUG_FLAGS $WARNING_FLAGS $STRIP_FLAGS"
  LTO_CFLAGS="-flto=thin -D__LLD_LTO__"

  COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  LTO_LDFLAGS="-flto=thin -fuse-ld=lld"

  # Per component CFLAGS and LDFlAGS (requires makedep patch)
  export preloader_CFLAGS=" -fno-lto -Wl,--no-relax"
  export wine64_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"
  export wine_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"

  # Disable assertions
  #export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -DNDEBUG -D_NDEBUG"

  export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
  export CROSSLDFLAGS="-Wl,/FILEALIGN:4096,/OPT:REF,/OPT:ICF"

  echo "Building Wine-64..."
  export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS"
  export CROSSCXXFLAGS="$COMMON_FLAGS -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-freetype \
    --with-mingw=clang \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --enable-archs=x86_64,i386

  make
}

package() {
  echo "Packaging Wine-64..."
  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install-lib

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/i386-windows/*.{dll,exe}
  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  find "$pkgdir"/usr/lib/wine -iname "*.a" -delete
  find "$pkgdir"/usr/lib/wine -iname "*.def" -delete
}

# vim:set ts=8 sts=2 sw=2 et:

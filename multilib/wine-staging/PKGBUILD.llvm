# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Peter Jung <ptr1337@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging
pkgver=10.3
pkgrel=2
_tkg_commit=21d3c43e7c4d5e817657ad9f3e21616b2c5de52a

_pkgbasever=${pkgver/rc/-rc}
_winever=$_pkgbasever
#_winever=${_pkgbasever%.*}

source=("git+https://gitlab.winehq.org/wine/wine.git?signed#tag=wine-$_pkgbasever"
        "git+https://gitlab.winehq.org/wine/wine-staging.git#tag=v$_pkgbasever"
        30-win32-aliases.conf
        wine-binfmt.conf)
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-wmclass.patch
        wine-isolate_home.patch
        0001-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
        0001-clang-fixup-lto.patch
        0002-makedep-add-per-source-cflags-and-per-program-ldflag.patch
        0003-configure-Enforce-4-byte-stack-alignment-on-clang-fo.patch
        wine-ntsync.patch
)
sha512sums=('d3cdc9c798d7c3ebffc73de8000e7c79260b8ba3019b41bebed8b329293ed4283110b3404a7d71a8204416fda2045bb2778d5f260f1139fb991ea798a5166e27'
            '4fb3757b5b129db1913299283dc7819ab50531e0c56afd9a63eb09785cd8a0b5739d51c2bbff98140c9def78f564d57053ac9219743d613fce9d8c965225ca8d'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            '2221d217bbff9e1b238ebd2954fa1bd3f20b742df599117526b098f806c609624b14cae0adf1ee131c0c699d89d2a98bb8d480e58567a614ec36a822bc4ca8a1'
            '30437d8ee92c5741fa50a7fe346ccfc48ba809dad0d740903a05a67781d23ea38a5094038a070a253e3fdd8046783b46a5420df6361bdd30cb229d3d88107569'
            '3dcdbd523fcbe79b9e9e9b026b9d0a5edf296514c7b48bd465d2dc05a8ca08e23ba8817e2de08edfe52286a2a2f81db42b65f71254cabe496752b9d45131d282'
            '785987b4eb881ecd0fcd217bc89315261c82fcbe33f39e3ddf4d87d05df3e94c3fff910dba8861a2269a1c184c9832f24db1603d9c7508892ba6488805ae6a83'
            '8694685c4b4e8559b98286a11e39b662edc6c0ff1fa0446abd828af84f31d26fc6b8d18c00e3e3d273dcdad373dd6af8f01eeaa0d3de14ef28512494c756bdc4'
            '605f6f527fc0b25768a3fa7bd921506269c2e70edb17289042eac4f34a410da26bfc4e61d0ae6356258d5fc10be25b8baab9dcabbd7bed034e94560882be457f'
            '67d2e1e08d7f3bab2cd8d39d9bafd2451ab813fd4696ace70e3a310dd4d249112f3a88dedb7a2bcc0f4b85131a41cd1f20a6f21384ef92ec02ec66f07fd46a93'
            '446b3d4ce7ed7d3cdd395e97ccc773a044cd848a107045e84d02d3f33473a0214d5f64179a301fb953aebe702b92eff0f2a614eca4f968bba064916bb8ca5624')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs - Staging branch"
url="https://www.wine-staging.com"
arch=(x86_64)
options=(!staticlibs !lto)
license=(LGPL-2.1-or-later)
depends=(
  attr            lib32-attr
  desktop-file-utils
  fontconfig      lib32-fontconfig
  freetype2       lib32-freetype2
  llvm-libs       lib32-llvm-libs
  gettext         lib32-gettext
  libpcap         lib32-libpcap
  libxcursor      lib32-libxcursor
  libxkbcommon    lib32-libxkbcommon
  libxi           lib32-libxi
  libxrandr       lib32-libxrandr
  wayland         lib32-wayland
)
makedepends=(autoconf bison perl flex clang llvm lld
  git
  alsa-lib              lib32-alsa-lib
  ffmpeg
  giflib                lib32-giflib
  gnutls                lib32-gnutls
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  gst-plugins-good      lib32-gst-plugins-good
  gtk3                  lib32-gtk3
  libcups               lib32-libcups
  libgphoto2
  libpulse              lib32-libpulse
  libva                 lib32-libva
  libxcomposite         lib32-libxcomposite
  libxinerama           lib32-libxinerama
  libxxf86vm            lib32-libxxf86vm
  mesa                  lib32-mesa
  mesa-libgl            lib32-mesa-libgl
  opencl-headers
  opencl-icd-loader     lib32-opencl-icd-loader
  python
  samba
  sane
  sdl2                  lib32-sdl2
  v4l-utils             lib32-v4l-utils
  vulkan-icd-loader     lib32-vulkan-icd-loader
)
makedepends+=(
  ntsync-header
)
optdepends=(
  alsa-lib              lib32-alsa-lib
  alsa-plugins          lib32-alsa-plugins
  cups                  lib32-libcups
  dosbox
  ffmpeg
  giflib                lib32-giflib
  gnutls                lib32-gnutls
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  gst-plugins-good      lib32-gst-plugins-good
  gtk3                  lib32-gtk3
  libgphoto2
  libpulse              lib32-libpulse
  libva                 lib32-libva
  libxcomposite         lib32-libxcomposite
  libxinerama           lib32-libxinerama
  opencl-icd-loader     lib32-opencl-icd-loader
  samba
  sane
  sdl2                  lib32-sdl2
  v4l-utils             lib32-v4l-utils
  vulkan-icd-loader     lib32-vulkan-icd-loader
  wine-gecko
  wine-mono
)
optdepends+=(
  ntsync-dkms
)

provides=("wine=$pkgver")
conflicts=('wine')
install=wine.install

prepare() {
  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-{32,64}-build

  cd wine
  # apply wine-staging patchset
  ../wine-staging/staging/patchinstall.py --backend=git-apply --all \
    --no-autoconf \
    -W eventfd_synchronization \
    -W server-PeekMessage \
    -W server-Signal_Thread

  patch -Np1 -i "$srcdir"/wine-ntsync.patch

  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  patch -Np1 -i "$_tkg_path"/proton/LAA/LAA-unix-staging.patch
  patch -Np1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -Np1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch

  patch -Np1 -i "$srcdir"/wine-wmclass.patch
  patch -Np1 -i "$srcdir"/wine-isolate_home.patch
  patch -Np1 -i "$srcdir"/0001-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
  patch -Np1 -i "$srcdir"/0001-clang-fixup-lto.patch
  patch -Np1 -i "$srcdir"/0002-makedep-add-per-source-cflags-and-per-program-ldflag.patch
  patch -Np1 -i "$srcdir"/0003-configure-Enforce-4-byte-stack-alignment-on-clang-fo.patch
  ./tools/make_requests
  ./dlls/winevulkan/make_vulkan
  ./tools/make_specfiles
  autoreconf -fiv
}

build() {
  # Doesn't compile without remove these flags as of 4.10
  # incompatible-pointer-types: https://bugs.gentoo.org/919758
  export CFLAGS="$CFLAGS -ffat-lto-objects -Wno-error=incompatible-pointer-types"

  # Apply flags for cross-compilation
  export CROSSCFLAGS="-O2 -pipe"
  export CROSSCXXFLAGS="-O2 -pipe"
  export CROSSLDFLAGS="-Wl,-O1"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="${flags["-mtune"]:-core-avx2}"

  export CC="clang"
  export CXX="clang++"

  # From Proton
  OPTIMIZE_FLAGS="-O3 -march=$march -mtune=$mtune -mfpmath=sse -pipe"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  #STRIP_FLAGS="-s"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $WARNING_FLAGS $STRIP_FLAGS"
  LTO_CFLAGS="-flto=thin -D__LLD_LTO__"

  COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  LTO_LDFLAGS="-flto=thin -fuse-ld=lld"

  # Per component CFLAGS and LDFlAGS (requires makedep patch)
  export preloader_CFLAGS=" -fno-lto -Wl,--no-relax"
  export wine64_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"
  export wine_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"

  # Disable assertions
  #export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -DNDEBUG -D_NDEBUG"

  export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
  export CROSSLDFLAGS="-Wl,/FILEALIGN:4096,/OPT:REF,/OPT:ICF"

  echo "Building Wine-64..."
  export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS -mcmodel=small"
  export CROSSCXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw=clang \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --with-xattr \
    --enable-win64

  make

  echo "Building Wine-32..."
  export CFLAGS="$COMMON_FLAGS -mstackrealign $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS -mstackrealign"
  export CROSSCXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-32-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw=clang \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --with-xattr \
    --with-wine64="$srcdir/$pkgname-64-build"

  make
}

package() {
  echo "Packaging Wine-32..."
  cd "$srcdir/$pkgname-32-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  echo "Packaging Wine-64..."
  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/i386-windows/*.{dll,exe}
  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  #find "$pkgdir"/usr/lib/wine -iname "*.a" -delete
  #find "$pkgdir"/usr/lib/wine -iname "*.def" -delete
}

# vim:set ts=8 sts=2 sw=2 et:

# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine
pkgver=10.8
pkgrel=2
_tkg_commit=2c07bbced3328c361ff73782611b9c9ab796ed37

_pkgbasever=${pkgver/rc/-rc}

source=("git+https://gitlab.winehq.org/wine/wine.git?signed#tag=wine-$_pkgbasever"
        30-win32-aliases.conf
        wine-binfmt.conf)
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-wmclass.patch
        wine-isolate_home.patch
        0001-win32u-Bump-AMD-driver-version.patch
        0002-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
        wine-ntsync.patch
)
sha512sums=('cdd2ba4f543b0c7526d37f96b26fadce6234a346aeb541e8f071caa006ca5b42da6406cf15bc2ef106334f100add7771ec1a55bede6d7d330de4880cc4b9339d'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            'abdaa9d7b46630f46ad0291e3db6509942fad5236178a42a0d8dbe6a1205a464bb0136601c2f4cd99d9d8bf0ed588460e1fa03148dcb90a7cbdf07013b3aa180'
            '372be267e8099fbffbaee99e127032841e5ff42949e96822fb9299fadf8c41f9932bc42c19d25dec5b0b06f56f9db91e480391d3e2fc988bf8885a79e0c58144'
            '3dcdbd523fcbe79b9e9e9b026b9d0a5edf296514c7b48bd465d2dc05a8ca08e23ba8817e2de08edfe52286a2a2f81db42b65f71254cabe496752b9d45131d282'
            'ef08c0bdafe4738fa84ffea8f3f165a102fd4d92e33764108704afb622515d862dfae9070d4a82680a1ceddf34088e434d2163407a26037f13f1523bf28debf1'
            '9c723337aef10c91c0e73a93dafe49078ff2571170e3277612dcdfde0fd2c25db00278f69dd8887e16385c125ea8cd857d1c5ff574aff3faf81ad484fb4a7d73'
            '3ed7815da7f4a81817cabbf53af9379b4b92730332c16f8d76beda92cb5357da288a79e7306b9c9b94e6f3e9224b01b4f98ba340a9e23774b068f839d5716863')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs"
url="https://www.winehq.org"
arch=(x86_64)
options=(!staticlibs !lto)
license=(LGPL-2.1-or-later)
depends=(
  desktop-file-utils
  fontconfig      #lib32-fontconfig
  freetype2       #lib32-freetype2
  gcc-libs        #lib32-gcc-libs
  gettext         #lib32-gettext
  libpcap         #lib32-libpcap
  libunwind       #lib32-libunwind
  libxcursor      #lib32-libxcursor
  libxkbcommon    #lib32-libxkbcommon
  libxi           #lib32-libxi
  libxrandr       #lib32-libxrandr
  wayland         #lib32-wayland
)
makedepends=(autoconf bison perl flex mingw-w64-gcc
  git
  alsa-lib              #lib32-alsa-lib
  ffmpeg
  gnutls                #lib32-gnutls
  gst-plugins-base-libs #lib32-gst-plugins-base-libs
  libcups               #lib32-libcups
  libgphoto2
  libpulse              #lib32-libpulse
  libxcomposite         #lib32-libxcomposite
  libxinerama           #lib32-libxinerama
  libxxf86vm            #lib32-libxxf86vm
  mesa                  #lib32-mesa
  mesa-libgl            #lib32-mesa-libgl
  opencl-headers
  opencl-icd-loader     #lib32-opencl-icd-loader
  pcsclite              #lib32-pcsclite
  python
  samba
  sane
  sdl2                  #lib32-sdl2
  unixodbc
  v4l-utils             #lib32-v4l-utils
  vulkan-headers
  vulkan-icd-loader     #lib32-vulkan-icd-loader
)
optdepends=(
  alsa-lib              #lib32-alsa-lib
  alsa-plugins          #lib32-alsa-plugins
  cups                  #lib32-libcups
  dosbox
  ffmpeg
  gnutls                #lib32-gnutls
  gst-plugins-bad
  gst-plugins-base      #lib32-gst-plugins-base
  gst-plugins-base-libs #lib32-gst-plugins-base-libs
  gst-plugins-good      #lib32-gst-plugins-good
  gst-plugins-ugly
  libgphoto2
  libpulse              #lib32-libpulse
  libxcomposite         #lib32-libxcomposite
  libxinerama           #lib32-libxinerama
  opencl-icd-loader     #lib32-opencl-icd-loader
  pcsclite              #lib32-pcsclite
  samba
  sane
  sdl2                  #lib32-sdl2
  unixodbc
  v4l-utils             #lib32-v4l-utils
  wine-gecko
  wine-mono
)
optdepends+=(
  NTSYNC-MODULE
)
makedepends=(${makedepends[@]} ${depends[@]})
install=wine.install

prepare() {
  # Get rid of old build dirs
  rm -rf $pkgname-64-build
  mkdir $pkgname-64-build

  cd wine

  patch -Np1 -i "$srcdir"/wine-ntsync.patch

  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  patch -Np1 -i "$_tkg_path"/proton/LAA/LAA-unix-wow64.patch
  patch -Np1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -Np1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch

  patch -Np1 -i "$srcdir"/wine-wmclass.patch
  patch -Np1 -i "$srcdir"/wine-isolate_home.patch
  patch -Np1 -i "$srcdir"/0001-win32u-Bump-AMD-driver-version.patch
  patch -Np1 -i "$srcdir"/0002-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
  ./tools/make_requests
  ./tools/make_specfiles
  ./dlls/winevulkan/make_vulkan
  autoreconf -fiv
  rm -rf autom4te.cache
}

build() {
  # Doesn't compile without remove these flags as of 4.10
  export CFLAGS="$CFLAGS -ffat-lto-objects"

  # Apply flags for cross-compilation
  export CROSSCFLAGS="-O2 -pipe -g"
  export CROSSCXXFLAGS="-O2 -pipe -g"
  export CROSSLDFLAGS="-Wl,-O1"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="${flags["-mtune"]:-core-avx2}"

  # From Proton
  OPTIMIZE_FLAGS="-O2 -march=$march -mtune=$mtune -mfpmath=sse -pipe -fno-semantic-interposition"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
  DEBUG_FLAGS="-ffunction-sections -fdata-sections -fno-omit-frame-pointer"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  STRIP_FLAGS="-s"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $DEBUG_FLAGS $WARNING_FLAGS $STRIP_FLAGS"
  #LTO_CFLAGS="-fuse-linker-plugin -fdevirtualize-at-ltrans -flto-partition=one -flto -Wl,-flto"

  COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  #LTO_LDFLAGS="$LTO_CFLAGS"

  # Disable assertions
  #export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -DNDEBUG -D_NDEBUG"

  export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
  export CROSSLDFLAGS="$COMMON_LDFLAGS -Wl,--file-alignment,4096"

  echo "Building Wine-64..."
  export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS"
  export CROSSCXXFLAGS="$COMMON_FLAGS -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-mingw \
    --with-alsa \
    --without-oss \
    --disable-winemenubuilder \
    --disable-tests \
    --enable-archs=x86_64,i386

  make
}

package() {
  echo "Packaging Wine-64..."
  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  i686-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib/wine/i386-windows/*.{dll,exe}
  x86_64-w64-mingw32-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  #find "$pkgdir"/usr/lib/wine -iname "*.a" -delete
  #find "$pkgdir"/usr/lib/wine -iname "*.def" -delete
}

# vim:set ts=8 sts=2 sw=2 et:

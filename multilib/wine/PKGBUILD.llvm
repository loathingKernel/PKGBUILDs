# Maintainer: Peter Jung <ptr1337@archlinux.org>
# Contributor: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine
pkgver=10.17
pkgrel=1
_tkg_commit=94fb13d8e55164f2a9664db9feecb6bb77d06b35

_pkgbasever=${pkgver/rc/-rc}

source=("git+https://gitlab.winehq.org/wine/wine.git?signed#tag=wine-$_pkgbasever"
        compatibilitytool.vdf
        toolmanifest.vdf
        miniproton
        30-win32-aliases.conf
        wine-binfmt.conf)
source+=(
        git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}
        wine-sauce.patch
)
sha512sums=('5454ec119dbd12eab8308e96df1289ec34eaa0febb43cf0042eba6c30ece1e60303b5905b70a63bb84a969239e270fd91dead606842c4256a5afa2441ceba5ec'
            '14a97ee7c9a023cf8b7cf8392325540ccc2e22673dd624d3add8e759c06ae98373fd3904835980803d661a174febfc2a3ad05e9e574b80435ebdcb7cc217fa31'
            '61e0176986a9794855eb89367b123413039c5c4a8a16ce9bdc65abc7668ae48e7d4fd9feeeb4d300888998d44bb5c457f19a8defb482edefd719a7dfdced3235'
            '244e6ca6321a322508786434789e096fb4e25c37e7f600dd11c33b93adf0685c804730641e90e4348e5ba756a030c26532f44ba22950e3c2766b44628db00030'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285'
            '064aa63790f80073bdabe3d8b17a1694635716cb694c1647b49fb28d1a0427bac3bef1233b5a9644f52388a32a39bca766998f54c951b1cd7d47d4658e80b08f'
            '3034b2a5e6cb96afec7411d6d0c46a53cf9d5b7c6a58919ee1cea9f54bd302a0cbe29bfbf64b2f4e1b7830c55abc1b0ecb7d5c7d2d4807ceb43972eeb4735bb1')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgdesc="A compatibility layer for running Windows programs"
url="https://www.winehq.org"
arch=(x86_64)
options=(!staticlibs !lto !debug)
license=(LGPL-2.1-or-later)
depends=(
  attr            lib32-attr
  desktop-file-utils
  fontconfig      lib32-fontconfig
  freetype2       lib32-freetype2
  gettext         lib32-gettext
  libpcap         lib32-libpcap
  libunwind       lib32-libunwind
  libxcursor      lib32-libxcursor
  libxkbcommon    lib32-libxkbcommon
  libxi           lib32-libxi
  libxrandr       lib32-libxrandr
  llvm-libs       lib32-llvm-libs
  wayland         lib32-wayland
)
makedepends=(
  alsa-lib              lib32-alsa-lib
  clang
  ffmpeg
  git
  gnutls                lib32-gnutls
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  libcups               lib32-libcups
  libgphoto2
  libpulse              lib32-libpulse
  libva                 lib32-libva
  libxcomposite         lib32-libxcomposite
  libxinerama           lib32-libxinerama
  libxxf86vm            lib32-libxxf86vm
  lld
  llvm
  mesa                  lib32-mesa
  opencl-headers
  opencl-icd-loader     lib32-opencl-icd-loader
  pcsclite              lib32-pcsclite
  perl
  python
  samba
  sane
  sdl2                  lib32-sdl2
  unixodbc
  v4l-utils             lib32-v4l-utils
  vulkan-headers
  vulkan-icd-loader     lib32-vulkan-icd-loader
)
optdepends=(
  alsa-lib              lib32-alsa-lib
  alsa-plugins          lib32-alsa-plugins
  cups                  lib32-libcups
  dosbox
  ffmpeg
  gnutls                lib32-gnutls
  gst-plugins-bad
  gst-plugins-base      lib32-gst-plugins-base
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  gst-plugins-good      lib32-gst-plugins-good
  gst-plugins-ugly
  libgphoto2
  libpulse              lib32-libpulse
  libva                 lib32-libva
  libxcomposite         lib32-libxcomposite
  libxinerama           lib32-libxinerama
  opencl-icd-loader     lib32-opencl-icd-loader
  pcsclite              lib32-pcsclite
  samba
  sane
  sdl2                  lib32-sdl2
  unixodbc
  v4l-utils             lib32-v4l-utils
  vulkan-icd-loader     lib32-vulkan-icd-loader
  wine-gecko
  wine-mono
)
optdepends+=(
  ntsync-common
  NTSYNC-MODULE
)
install=wine.install

prepare() {
  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-{32,64}-build

  cd wine
  patch -Np1 -i "$srcdir"/wine-sauce.patch
  _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
  patch -Np1 -i "$_tkg_path"/proton/LAA/LAA-unix.patch
  patch -Np1 -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
  patch -Np1 -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch
  ./tools/make_requests
  ./tools/make_specfiles
  ./dlls/winevulkan/make_vulkan
  autoreconf -fiv
  rm -rf autom4te.cache
}

build() {
  # Apply flags for cross-compilation
  export CROSSCFLAGS="-O2 -pipe -g"
  export CROSSCXXFLAGS="-O2 -pipe -g"
  export CROSSLDFLAGS="-Wl,-O1"

  local -a split=($CFLAGS)
  local -A flags
  for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
  local march="${flags["-march"]:-nocona}"
  local mtune="${flags["-mtune"]:-core-avx2}"

  export CC="clang"
  export CXX="clang++"

  # From Proton
  OPTIMIZE_FLAGS="-O2 -march=$march -mtune=$mtune -mfpmath=sse -pipe"
  SANITY_FLAGS="-fwrapv -fno-strict-aliasing -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64"
  DEBUG_FLAGS="-ffunction-sections -fdata-sections -fno-omit-frame-pointer"
  WARNING_FLAGS="-Wno-incompatible-pointer-types"
  #STRIP_FLAGS="-s"
  COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $DEBUG_FLAGS $WARNING_FLAGS $STRIP_FLAGS"
  #LTO_CFLAGS="-flto=thin -D__LLD_LTO__"

  COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"
  #LTO_LDFLAGS="-flto=thin -fuse-ld=lld"

  # Per component CFLAGS and LDFlAGS (requires makedep patch)
  #export preloader_CFLAGS=" -fno-lto -Wl,--no-relax"
  #export wine64_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"
  #export wine_preloader_LDFLAGS=" -fno-lto -Wl,--no-relax"

  # Disable assertions
  #export CPPFLAGS="-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -DNDEBUG -D_NDEBUG"

  export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
  export CROSSLDFLAGS="-Wl,/FILEALIGN:4096,/OPT:REF,/OPT:ICF"

  export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS -mcmodel=small"
  export CROSSCXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-64-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-freetype \
    --with-mingw=clang \
    --with-alsa \
    --with-ffmpeg \
    --without-oss \
    --disable-tests \
    --enable-win64

  make

  export CFLAGS="$COMMON_FLAGS -mstackrealign $LTO_CFLAGS"
  export CXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17 $LTO_CFLAGS"
  export CROSSCFLAGS="$COMMON_FLAGS -mstackrealign"
  export CROSSCXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
  cd "$srcdir/$pkgname-32-build"
  ../wine/configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --with-x \
    --with-wayland \
    --with-gstreamer \
    --with-freetype \
    --with-mingw=clang \
    --with-alsa \
    --without-ffmpeg \
    --without-oss \
    --disable-tests \
    --with-wine64="$srcdir/$pkgname-64-build"

  make
}

package() {
  cd "$srcdir/$pkgname-32-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install-lib

  cd "$srcdir/$pkgname-64-build"
  make prefix="$pkgdir/usr" \
    libdir="$pkgdir/usr/lib" \
    dlldir="$pkgdir/usr/lib/wine" install-lib

  # Font aliasing settings for Win32 applications
  install -d "$pkgdir"/usr/share/fontconfig/conf.{avail,default}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/usr/share/fontconfig/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/usr/share/fontconfig/conf.default/30-win32-aliases.conf"
  install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"

  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/i386-windows/*.{dll,exe}
  llvm-strip --strip-unneeded "$pkgdir"/usr/lib/wine/x86_64-windows/*.{dll,exe}

  find "$pkgdir"/usr/lib/wine -iname "*.a" -delete
  find "$pkgdir"/usr/lib/wine -iname "*.def" -delete

  install -d "$pkgdir/usr/share/steam/compatibilitytools.d/wine-miniproton"
  install -m644 "$srcdir/compatibilitytool.vdf" "$pkgdir/usr/share/steam/compatibilitytools.d/wine-miniproton"
  install -m644 "$srcdir/toolmanifest.vdf" "$pkgdir/usr/share/steam/compatibilitytools.d/wine-miniproton"
  install -m755 "$srcdir/miniproton" "$pkgdir/usr/share/steam/compatibilitytools.d/wine-miniproton"
}

# vim:set ts=8 sts=2 sw=2 et:

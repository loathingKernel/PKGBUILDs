name: _job_pkgbuild

on:
  workflow_call:
    inputs:
      pkgdir:
        required: true
        type: string
      pacman_conf:
        required: true
        type: string
      makepkg_conf:
        required: true
        type: string
      makepkg_args:
        required: false
        type: string
      multilib:
        required: false
        type: boolean
        default: false
      ccache_ext:
        required: false
        type: boolean
        default: true
      release_tag:
        required: true
        type: string

jobs:
  pkgbuild:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare Cache
      uses: actions/cache@v4
      with:
        path: ./.ccache
        key: ${{ github.workflow }}-${{ inputs.release_tag }}-${{ github.run_id }}
        restore-keys: |
          ${{ github.workflow }}-${{ inputs.release_tag }}

    - name: Run 'pkgbuild' action
      id: pkgbuild
      uses: ./.github/actions/pkgbuild
      with:
        pkgdir: ${{ inputs.pkgdir }}
        pacmanConf: ${{ inputs.pacman_conf }}
        makepkgConf: ${{ inputs.makepkg_conf }}
        makepkgArgs: ${{ inputs.makepkg_args }}
        multilib: ${{ inputs.multilib }}
        useCcacheExt: ${{ inputs.ccache_ext }}
        repoReleaseTag: ${{ inputs.release_tag }}

    - name: Print Package Files
      run: |
        echo "* Successfully built package archives"
        echo "    ${{ steps.pkgbuild.outputs.pkgfile0 }}"
        echo "    ${{ steps.pkgbuild.outputs.pkgfile1 }}"
        echo "    ${{ steps.pkgbuild.outputs.pkgfile2 }}"
        echo "    ${{ steps.pkgbuild.outputs.pkgfile3 }}"
        echo "* Replacing package archives"
        echo "    ${{ steps.pkgbuild.outputs.oldfile0 }}"
        echo "    ${{ steps.pkgbuild.outputs.oldfile1 }}"
        echo "    ${{ steps.pkgbuild.outputs.oldfile2 }}"
        echo "    ${{ steps.pkgbuild.outputs.oldfile3 }}"
        echo "* Repository database files"
        echo "    ${{ steps.pkgbuild.outputs.repofile0 }}"
        echo "    ${{ steps.pkgbuild.outputs.repofile1 }}"
        echo "    ${{ steps.pkgbuild.outputs.repofile2 }}"
        echo "    ${{ steps.pkgbuild.outputs.repofile3 }}"

    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.pkgfile0 }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.pkgfile0 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.pkgfile1 }}
      if: ${{ steps.pkgbuild.outputs.pkgfile1 != '' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.pkgfile1 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.pkgfile2 }}
      if: ${{ steps.pkgbuild.outputs.pkgfile2 != '' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.pkgfile2 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.pkgfile3 }}
      if: ${{ steps.pkgbuild.outputs.pkgfile3 != '' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.pkgfile3 }}
        overwrite: true

    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.repofile0 }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.repofile0 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.repofile1 }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.repofile1 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.repofile2 }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.repofile2 }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v2
      name: Upload ${{ steps.pkgbuild.outputs.repofile3 }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        file: ${{ steps.pkgbuild.outputs.repofile3 }}
        overwrite: true

    - uses: mknejp/delete-release-assets@v1
      name: Remove ${{ steps.pkgbuild.outputs.oldfile0 }}
      if: ${{ steps.pkgbuild.outputs.oldfile0 != '' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        fail-if-no-assets: false
        fail-if-no-release: true
        assets: ${{ steps.pkgbuild.outputs.oldfile0 }}
    - uses: mknejp/delete-release-assets@v1
      name: Remove ${{ steps.pkgbuild.outputs.oldfile1 }}
      if: ${{ steps.pkgbuild.outputs.oldfile1 != '' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        assets: ${{ steps.pkgbuild.outputs.oldfile1 }}
        fail-if-no-assets: false
        fail-if-no-release: true
    - uses: mknejp/delete-release-assets@v1
      name: Remove ${{ steps.pkgbuild.outputs.oldfile2 }}
      if: ${{ steps.pkgbuild.outputs.oldfile2 != '' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        assets: ${{ steps.pkgbuild.outputs.oldfile2 }}
        fail-if-no-assets: false
        fail-if-no-release: true
    - uses: mknejp/delete-release-assets@v1
      name: Remove ${{ steps.pkgbuild.outputs.oldfile3 }}
      if: ${{ steps.pkgbuild.outputs.oldfile3 != '' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ inputs.release_tag }}
        assets: ${{ steps.pkgbuild.outputs.oldfile3 }}
        fail-if-no-assets: false
        fail-if-no-release: true
